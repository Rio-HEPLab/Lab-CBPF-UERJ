--- /Users/antoniovilelapereira/Desktop/Work/UERJ/LFNP/CAENV1x90_1_1_linux/CAENVMEToolBox/Demo/CAENV1190Demo/src/main.c	2013-10-03 10:47:33.000000000 -0300
+++ main.c	2016-03-31 16:59:08.000000000 -0300
@@ -20,9 +20,9 @@
 	#include <ctype.h>
 #endif
 #include "common_defs.h"
-#include "cvt_board_commons.h"
-#include "cvt_common_defs.h"
-#include "cvt_V1190.h"
+#include "../include/CAENVMETool/cvt_board_commons.h"
+#include "../include/CAENVMETool/cvt_common_defs.h"
+#include "../include/CAENVMETool/cvt_V1190.h"
 #include "user_settings.h"
 #include "console.h"
 
@@ -40,6 +40,9 @@
 #define FILLER_STR		"  FILLER  - \n"
 #define UNKNOWN_STR		"\n??? UNKNOWN TAG ??? -          READ WORD: %08x \n\n"
 
+#define GLB_HDR_STR_TXT		"%d\n"
+#define TDC_MSR_STR_TXT		"%d %d\n"
+
 ////////////////////////////////////////////
 // File local variables declaration
 ////////////////////////////////////////////
@@ -74,6 +77,7 @@
 	cvt_V1190_data board_data;						// board data
 	user_setting_data user_setting;					// user settings
 	FILE* parsed_out_file= NULL;					// parsed output file
+	FILE* parsed_txt_file = NULL;
 	FILE* raw_out_file= NULL;						// raw output file
 	UINT8 *data_buff= NULL;							// read data buffer
 	UINT32 data_size;
@@ -178,6 +182,7 @@
 
 		// Show system infos
 		TRACE1( "   Firmware Rev.       : %04x\n", firmware_rev);
+
 		TRACE1( "   Micro Firmware Rev. : %04x\n", micro_firmware_rev);
 		TRACE1( "   Serial Number       : %04x\n", serial_number);
 		for( i= 0; i< user_setting.m_tdc_count; i++)
@@ -213,6 +218,7 @@
 		}
 		break;
 	case AM_TRIGGER_MATCH:
+		TRACE("\n Setting Trigger Matching Mode ...");
 		if( !cvt_V1190_set_trigger_matching_acquisition_mode(	&board_data, 
 																user_setting.m_acquisition_mode.m_params.m_trigger_matching.m_window_width,
 																user_setting.m_acquisition_mode.m_params.m_trigger_matching.m_window_offset,
@@ -234,7 +240,18 @@
 		break;
 	}
 	TRACE(  " Ok\n");
-
+	
+	INT16 tdc_lsb = 3;
+	// TDC resolution - implemented HN
+	TRACE(" Setting TDC resolution ...");
+		if (!cvt_V1190_set_TDC_LSB(&board_data, tdc_lsb))
+		{
+			TRACE("Error executing cvt_V1190_set_TDC_LSB \n");
+			ret_val = -5;
+			goto exit_point;
+		}
+	TRACE("Ok\n");
+	
 	//
 	// readout mode
 	TRACE(  " Setting readout mode ...");
@@ -263,6 +280,12 @@
 		ret_val= -5;
 		goto exit_point;
 	}
+	if ((parsed_txt_file = fopen(user_setting.m_parsed_txt_filename, "wt")) == NULL)
+	{
+		TRACE1("Error creating parsed output file '%s'", user_setting.m_parsed_txt_filename);
+		ret_val = -5;
+		goto exit_point;
+	}
 	if( ( raw_out_file= fopen( user_setting.m_raw_output_filename, "w+b"))== NULL)
 	{
 		TRACE1( "Error creating raw output file '%s' \n", user_setting.m_raw_output_filename);
@@ -329,13 +352,16 @@
 	while( ( data_size= ( UINT32)fread( data_buff, 4, DATA_BUFF_SIZE>> 2, raw_out_file)))
 	{
 		UINT32 *tmp_buff= (UINT32*)data_buff;
-		char line[ 400];
+		char line[400], line_txt[400];
 		size_t str_len;
+		UINT16 data_line = 0;
 
 		while( data_size-- > 0)
 		{
+			data_line = 0;
 			UINT32 data= *(tmp_buff++);
-			*line= '\0';
+			*line     = '\0';
+			*line_txt = '\0';
 			switch( data& CVT_V1190_DATA_TYPE_MSK)
 			{
 			case CVT_V1190_GLOBAL_HEADER:
@@ -344,7 +370,9 @@
 					UINT32 event_count= CVT_V1190_GET_GLB_HDR_EVENT_COUNT( data);
 					UINT32 geo= CVT_V1190_GET_GLB_HDR_GEO( data);
 
+					data_line = 1;
 					sprintf( line, GLB_HDR_STR, event_count, geo);
+					sprintf( line_txt, GLB_HDR_STR_TXT, event_count);
 				}
 				break;
 			case CVT_V1190_GLOBAL_TRAILER:
@@ -365,6 +393,7 @@
 					UINT32 bunch_id= CVT_V1190_GET_TDC_HDR_BUNCH_ID( data);
 
 					sprintf( line, TDC_HDR_STR, tdc, event_id, bunch_id);
+					
 				}
 				break;
 			case CVT_V1190_TDC_MEASURE:
@@ -381,9 +410,12 @@
 					else {
 						channel= CVT_V1290_GET_TDC_MSR_CHANNEL( data);
 						measure= CVT_V1290_GET_TDC_HDR_MEASURE( data);
+						printf("\n Salva como V1290 , tdc = %d",measure);
 					}
 
-					sprintf( line, TDC_MSR_STR, trailing, channel, measure);
+					data_line = 1;
+					sprintf(line, TDC_MSR_STR, trailing, channel, measure);
+					sprintf(line_txt, TDC_MSR_STR_TXT, channel, measure);
 				}
 				break;
 			case CVT_V1190_TDC_ERROR:
@@ -417,17 +449,28 @@
 				break;
 			default:
 				{
-					sprintf( line, UNKNOWN_STR, data);
+					sprintf( line, UNKNOWN_STR, data );
+					sprintf( line_txt, UNKNOWN_STR, data );
 				}
 				break;
 			}
-			if( (str_len= strlen( line))> 0)
+			if ((str_len = strlen(line)) > 0)
 			{
-				if( fwrite( line, 1, str_len, parsed_out_file)!= str_len)
+				if (fwrite(line, 1, str_len, parsed_out_file) != str_len)
 				{
 					// error writing file
-					TRACE1( "\nError writing parsed output file '%s' \n", user_setting.m_parsed_output_filename);
-					ret_val= -5;
+					TRACE1("\nError writing parsed output file '%s' \n", user_setting.m_parsed_output_filename);
+					ret_val = -5;
+					goto exit_point;
+				}
+			}
+			if ((str_len = strlen(line_txt)) > 0)
+			{
+				if (data_line && (fwrite(line_txt, 1, str_len, parsed_txt_file) != str_len))
+				{
+					// error writing file
+					TRACE1("\nError writing parsed output file '%s' \n", user_setting.m_parsed_txt_filename);
+					ret_val = -5;
 					goto exit_point;
 				}
 			}
@@ -459,6 +502,10 @@
 	{
 		fclose( parsed_out_file);
 	}
+	if (parsed_txt_file != NULL)
+	{
+		fclose(parsed_txt_file);
+	}
 	if( data_buff!= NULL)
 	{
 		free( data_buff);
